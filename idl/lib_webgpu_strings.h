#pragma once

typedef int WGPU_PREDEFINED_COLOR_SPACE;
#define WGPU_PREDEFINED_COLOR_SPACE_INVALID 0
#define WGPU_PREDEFINED_COLOR_SPACE_SRGB 1

typedef int WGPU_POWER_PREFERENCE;
#define WGPU_POWER_PREFERENCE_INVALID 0
#define WGPU_POWER_PREFERENCE_LOW_POWER 2
#define WGPU_POWER_PREFERENCE_HIGH_PERFORMANCE 3

typedef int WGPU_FEATURE_NAME;
#define WGPU_FEATURE_NAME_INVALID 0
#define WGPU_FEATURE_NAME_DEPTH_CLAMPING 4
#define WGPU_FEATURE_NAME_DEPTH24UNORM_STENCIL8 5
#define WGPU_FEATURE_NAME_DEPTH32FLOAT_STENCIL8 6
#define WGPU_FEATURE_NAME_PIPELINE_STATISTICS_QUERY 7
#define WGPU_FEATURE_NAME_TEXTURE_COMPRESSION_BC 8
#define WGPU_FEATURE_NAME_TIMESTAMP_QUERY 9

typedef int WGPU_TEXTURE_DIMENSION;
#define WGPU_TEXTURE_DIMENSION_INVALID 0
#define WGPU_TEXTURE_DIMENSION_1D 10
#define WGPU_TEXTURE_DIMENSION_2D 11
#define WGPU_TEXTURE_DIMENSION_3D 12

typedef int WGPU_TEXTURE_VIEW_DIMENSION;
#define WGPU_TEXTURE_VIEW_DIMENSION_INVALID 0
#define WGPU_TEXTURE_VIEW_DIMENSION_1D 10
#define WGPU_TEXTURE_VIEW_DIMENSION_2D 11
#define WGPU_TEXTURE_VIEW_DIMENSION_2D_ARRAY 13
#define WGPU_TEXTURE_VIEW_DIMENSION_CUBE 14
#define WGPU_TEXTURE_VIEW_DIMENSION_CUBE_ARRAY 15
#define WGPU_TEXTURE_VIEW_DIMENSION_3D 12

typedef int WGPU_TEXTURE_ASPECT;
#define WGPU_TEXTURE_ASPECT_INVALID 0
#define WGPU_TEXTURE_ASPECT_ALL 16
#define WGPU_TEXTURE_ASPECT_STENCIL_ONLY 17
#define WGPU_TEXTURE_ASPECT_DEPTH_ONLY 18

typedef int WGPU_TEXTURE_FORMAT;
#define WGPU_TEXTURE_FORMAT_INVALID 0
#define WGPU_TEXTURE_FORMAT_R8UNORM 19
#define WGPU_TEXTURE_FORMAT_R8SNORM 20
#define WGPU_TEXTURE_FORMAT_R8UINT 21
#define WGPU_TEXTURE_FORMAT_R8SINT 22
#define WGPU_TEXTURE_FORMAT_R16UINT 23
#define WGPU_TEXTURE_FORMAT_R16SINT 24
#define WGPU_TEXTURE_FORMAT_R16FLOAT 25
#define WGPU_TEXTURE_FORMAT_RG8UNORM 26
#define WGPU_TEXTURE_FORMAT_RG8SNORM 27
#define WGPU_TEXTURE_FORMAT_RG8UINT 28
#define WGPU_TEXTURE_FORMAT_RG8SINT 29
#define WGPU_TEXTURE_FORMAT_R32UINT 30
#define WGPU_TEXTURE_FORMAT_R32SINT 31
#define WGPU_TEXTURE_FORMAT_R32FLOAT 32
#define WGPU_TEXTURE_FORMAT_RG16UINT 33
#define WGPU_TEXTURE_FORMAT_RG16SINT 34
#define WGPU_TEXTURE_FORMAT_RG16FLOAT 35
#define WGPU_TEXTURE_FORMAT_RGBA8UNORM 36
#define WGPU_TEXTURE_FORMAT_RGBA8UNORM_SRGB 37
#define WGPU_TEXTURE_FORMAT_RGBA8SNORM 38
#define WGPU_TEXTURE_FORMAT_RGBA8UINT 39
#define WGPU_TEXTURE_FORMAT_RGBA8SINT 40
#define WGPU_TEXTURE_FORMAT_BGRA8UNORM 41
#define WGPU_TEXTURE_FORMAT_BGRA8UNORM_SRGB 42
#define WGPU_TEXTURE_FORMAT_RGB9E5UFLOAT 43
#define WGPU_TEXTURE_FORMAT_RGB10A2UNORM 44
#define WGPU_TEXTURE_FORMAT_RG11B10UFLOAT 45
#define WGPU_TEXTURE_FORMAT_RG32UINT 46
#define WGPU_TEXTURE_FORMAT_RG32SINT 47
#define WGPU_TEXTURE_FORMAT_RG32FLOAT 48
#define WGPU_TEXTURE_FORMAT_RGBA16UINT 49
#define WGPU_TEXTURE_FORMAT_RGBA16SINT 50
#define WGPU_TEXTURE_FORMAT_RGBA16FLOAT 51
#define WGPU_TEXTURE_FORMAT_RGBA32UINT 52
#define WGPU_TEXTURE_FORMAT_RGBA32SINT 53
#define WGPU_TEXTURE_FORMAT_RGBA32FLOAT 54
#define WGPU_TEXTURE_FORMAT_STENCIL8 55
#define WGPU_TEXTURE_FORMAT_DEPTH16UNORM 56
#define WGPU_TEXTURE_FORMAT_DEPTH24PLUS 57
#define WGPU_TEXTURE_FORMAT_DEPTH24PLUS_STENCIL8 58
#define WGPU_TEXTURE_FORMAT_DEPTH32FLOAT 59
#define WGPU_TEXTURE_FORMAT_BC1_RGBA_UNORM 60
#define WGPU_TEXTURE_FORMAT_BC1_RGBA_UNORM_SRGB 61
#define WGPU_TEXTURE_FORMAT_BC2_RGBA_UNORM 62
#define WGPU_TEXTURE_FORMAT_BC2_RGBA_UNORM_SRGB 63
#define WGPU_TEXTURE_FORMAT_BC3_RGBA_UNORM 64
#define WGPU_TEXTURE_FORMAT_BC3_RGBA_UNORM_SRGB 65
#define WGPU_TEXTURE_FORMAT_BC4_R_UNORM 66
#define WGPU_TEXTURE_FORMAT_BC4_R_SNORM 67
#define WGPU_TEXTURE_FORMAT_BC5_RG_UNORM 68
#define WGPU_TEXTURE_FORMAT_BC5_RG_SNORM 69
#define WGPU_TEXTURE_FORMAT_BC6H_RGB_UFLOAT 70
#define WGPU_TEXTURE_FORMAT_BC6H_RGB_FLOAT 71
#define WGPU_TEXTURE_FORMAT_BC7_RGBA_UNORM 72
#define WGPU_TEXTURE_FORMAT_BC7_RGBA_UNORM_SRGB 73
#define WGPU_TEXTURE_FORMAT_DEPTH24UNORM_STENCIL8 5
#define WGPU_TEXTURE_FORMAT_DEPTH32FLOAT_STENCIL8 6

typedef int WGPU_ADDRESS_MODE;
#define WGPU_ADDRESS_MODE_INVALID 0
#define WGPU_ADDRESS_MODE_CLAMP_TO_EDGE 74
#define WGPU_ADDRESS_MODE_REPEAT 75
#define WGPU_ADDRESS_MODE_MIRROR_REPEAT 76

typedef int WGPU_FILTER_MODE;
#define WGPU_FILTER_MODE_INVALID 0
#define WGPU_FILTER_MODE_NEAREST 77
#define WGPU_FILTER_MODE_LINEAR 78

typedef int WGPU_COMPARE_FUNCTION;
#define WGPU_COMPARE_FUNCTION_INVALID 0
#define WGPU_COMPARE_FUNCTION_NEVER 79
#define WGPU_COMPARE_FUNCTION_LESS 80
#define WGPU_COMPARE_FUNCTION_EQUAL 81
#define WGPU_COMPARE_FUNCTION_LESS_EQUAL 82
#define WGPU_COMPARE_FUNCTION_GREATER 83
#define WGPU_COMPARE_FUNCTION_NOT_EQUAL 84
#define WGPU_COMPARE_FUNCTION_GREATER_EQUAL 85
#define WGPU_COMPARE_FUNCTION_ALWAYS 86

typedef int WGPU_BUFFER_BINDING_TYPE;
#define WGPU_BUFFER_BINDING_TYPE_INVALID 0
#define WGPU_BUFFER_BINDING_TYPE_UNIFORM 87
#define WGPU_BUFFER_BINDING_TYPE_STORAGE 88
#define WGPU_BUFFER_BINDING_TYPE_READ_ONLY_STORAGE 89

typedef int WGPU_SAMPLER_BINDING_TYPE;
#define WGPU_SAMPLER_BINDING_TYPE_INVALID 0
#define WGPU_SAMPLER_BINDING_TYPE_FILTERING 90
#define WGPU_SAMPLER_BINDING_TYPE_NON_FILTERING 91
#define WGPU_SAMPLER_BINDING_TYPE_COMPARISON 92

typedef int WGPU_TEXTURE_SAMPLE_TYPE;
#define WGPU_TEXTURE_SAMPLE_TYPE_INVALID 0
#define WGPU_TEXTURE_SAMPLE_TYPE_FLOAT 93
#define WGPU_TEXTURE_SAMPLE_TYPE_UNFILTERABLE_FLOAT 94
#define WGPU_TEXTURE_SAMPLE_TYPE_DEPTH 95
#define WGPU_TEXTURE_SAMPLE_TYPE_SINT 96
#define WGPU_TEXTURE_SAMPLE_TYPE_UINT 97

typedef int WGPU_STORAGE_TEXTURE_ACCESS;
#define WGPU_STORAGE_TEXTURE_ACCESS_INVALID 0
#define WGPU_STORAGE_TEXTURE_ACCESS_READ_ONLY 98
#define WGPU_STORAGE_TEXTURE_ACCESS_WRITE_ONLY 99

typedef int WGPU_COMPILATION_MESSAGE_TYPE;
#define WGPU_COMPILATION_MESSAGE_TYPE_INVALID 0
#define WGPU_COMPILATION_MESSAGE_TYPE_ERROR 100
#define WGPU_COMPILATION_MESSAGE_TYPE_WARNING 101
#define WGPU_COMPILATION_MESSAGE_TYPE_INFO 102

typedef int WGPU_PRIMITIVE_TOPOLOGY;
#define WGPU_PRIMITIVE_TOPOLOGY_INVALID 0
#define WGPU_PRIMITIVE_TOPOLOGY_POINT_LIST 103
#define WGPU_PRIMITIVE_TOPOLOGY_LINE_LIST 104
#define WGPU_PRIMITIVE_TOPOLOGY_LINE_STRIP 105
#define WGPU_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST 106
#define WGPU_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP 107

typedef int WGPU_FRONT_FACE;
#define WGPU_FRONT_FACE_INVALID 0
#define WGPU_FRONT_FACE_CCW 108
#define WGPU_FRONT_FACE_CW 109

typedef int WGPU_CULL_MODE;
#define WGPU_CULL_MODE_INVALID 0
#define WGPU_CULL_MODE_NONE 110
#define WGPU_CULL_MODE_FRONT 111
#define WGPU_CULL_MODE_BACK 112

typedef int WGPU_BLEND_FACTOR;
#define WGPU_BLEND_FACTOR_INVALID 0
#define WGPU_BLEND_FACTOR_ZERO 113
#define WGPU_BLEND_FACTOR_ONE 114
#define WGPU_BLEND_FACTOR_SRC 115
#define WGPU_BLEND_FACTOR_ONE_MINUS_SRC 116
#define WGPU_BLEND_FACTOR_SRC_ALPHA 117
#define WGPU_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA 118
#define WGPU_BLEND_FACTOR_DST 119
#define WGPU_BLEND_FACTOR_ONE_MINUS_DST 120
#define WGPU_BLEND_FACTOR_DST_ALPHA 121
#define WGPU_BLEND_FACTOR_ONE_MINUS_DST_ALPHA 122
#define WGPU_BLEND_FACTOR_SRC_ALPHA_SATURATED 123
#define WGPU_BLEND_FACTOR_CONSTANT 124
#define WGPU_BLEND_FACTOR_ONE_MINUS_CONSTANT 125

typedef int WGPU_BLEND_OPERATION;
#define WGPU_BLEND_OPERATION_INVALID 0
#define WGPU_BLEND_OPERATION_ADD 126
#define WGPU_BLEND_OPERATION_SUBTRACT 127
#define WGPU_BLEND_OPERATION_REVERSE_SUBTRACT 128
#define WGPU_BLEND_OPERATION_MIN 129
#define WGPU_BLEND_OPERATION_MAX 130

typedef int WGPU_STENCIL_OPERATION;
#define WGPU_STENCIL_OPERATION_INVALID 0
#define WGPU_STENCIL_OPERATION_KEEP 131
#define WGPU_STENCIL_OPERATION_ZERO 113
#define WGPU_STENCIL_OPERATION_REPLACE 132
#define WGPU_STENCIL_OPERATION_INVERT 133
#define WGPU_STENCIL_OPERATION_INCREMENT_CLAMP 134
#define WGPU_STENCIL_OPERATION_DECREMENT_CLAMP 135
#define WGPU_STENCIL_OPERATION_INCREMENT_WRAP 136
#define WGPU_STENCIL_OPERATION_DECREMENT_WRAP 137

typedef int WGPU_INDEX_FORMAT;
#define WGPU_INDEX_FORMAT_INVALID 0
#define WGPU_INDEX_FORMAT_UINT16 138
#define WGPU_INDEX_FORMAT_UINT32 139

typedef int WGPU_VERTEX_FORMAT;
#define WGPU_VERTEX_FORMAT_INVALID 0
#define WGPU_VERTEX_FORMAT_UINT8X2 140
#define WGPU_VERTEX_FORMAT_UINT8X4 141
#define WGPU_VERTEX_FORMAT_SINT8X2 142
#define WGPU_VERTEX_FORMAT_SINT8X4 143
#define WGPU_VERTEX_FORMAT_UNORM8X2 144
#define WGPU_VERTEX_FORMAT_UNORM8X4 145
#define WGPU_VERTEX_FORMAT_SNORM8X2 146
#define WGPU_VERTEX_FORMAT_SNORM8X4 147
#define WGPU_VERTEX_FORMAT_UINT16X2 148
#define WGPU_VERTEX_FORMAT_UINT16X4 149
#define WGPU_VERTEX_FORMAT_SINT16X2 150
#define WGPU_VERTEX_FORMAT_SINT16X4 151
#define WGPU_VERTEX_FORMAT_UNORM16X2 152
#define WGPU_VERTEX_FORMAT_UNORM16X4 153
#define WGPU_VERTEX_FORMAT_SNORM16X2 154
#define WGPU_VERTEX_FORMAT_SNORM16X4 155
#define WGPU_VERTEX_FORMAT_FLOAT16X2 156
#define WGPU_VERTEX_FORMAT_FLOAT16X4 157
#define WGPU_VERTEX_FORMAT_FLOAT32 158
#define WGPU_VERTEX_FORMAT_FLOAT32X2 159
#define WGPU_VERTEX_FORMAT_FLOAT32X3 160
#define WGPU_VERTEX_FORMAT_FLOAT32X4 161
#define WGPU_VERTEX_FORMAT_UINT32 139
#define WGPU_VERTEX_FORMAT_UINT32X2 162
#define WGPU_VERTEX_FORMAT_UINT32X3 163
#define WGPU_VERTEX_FORMAT_UINT32X4 164
#define WGPU_VERTEX_FORMAT_SINT32 165
#define WGPU_VERTEX_FORMAT_SINT32X2 166
#define WGPU_VERTEX_FORMAT_SINT32X3 167
#define WGPU_VERTEX_FORMAT_SINT32X4 168

typedef int WGPU_VERTEX_STEP_MODE;
#define WGPU_VERTEX_STEP_MODE_INVALID 0
#define WGPU_VERTEX_STEP_MODE_VERTEX 169
#define WGPU_VERTEX_STEP_MODE_INSTANCE 170

typedef int WGPU_LOAD_OP;
#define WGPU_LOAD_OP_INVALID 0
#define WGPU_LOAD_OP_LOAD 171

typedef int WGPU_STORE_OP;
#define WGPU_STORE_OP_INVALID 0
#define WGPU_STORE_OP_STORE 172
#define WGPU_STORE_OP_DISCARD 173

typedef int WGPU_QUERY_TYPE;
#define WGPU_QUERY_TYPE_INVALID 0
#define WGPU_QUERY_TYPE_OCCLUSION 174
#define WGPU_QUERY_TYPE_PIPELINE_STATISTICS 175
#define WGPU_QUERY_TYPE_TIMESTAMP 176

typedef int WGPU_PIPELINE_STATISTIC_NAME;
#define WGPU_PIPELINE_STATISTIC_NAME_INVALID 0
#define WGPU_PIPELINE_STATISTIC_NAME_VERTEX_SHADER_INVOCATIONS 177
#define WGPU_PIPELINE_STATISTIC_NAME_CLIPPER_INVOCATIONS 178
#define WGPU_PIPELINE_STATISTIC_NAME_CLIPPER_PRIMITIVES_OUT 179
#define WGPU_PIPELINE_STATISTIC_NAME_FRAGMENT_SHADER_INVOCATIONS 180
#define WGPU_PIPELINE_STATISTIC_NAME_COMPUTE_SHADER_INVOCATIONS 181

typedef int WGPU_CANVAS_COMPOSITING_ALPHA_MODE;
#define WGPU_CANVAS_COMPOSITING_ALPHA_MODE_INVALID 0
#define WGPU_CANVAS_COMPOSITING_ALPHA_MODE_OPAQUE 182
#define WGPU_CANVAS_COMPOSITING_ALPHA_MODE_PREMULTIPLIED 183

typedef int WGPU_DEVICE_LOST_REASON;
#define WGPU_DEVICE_LOST_REASON_INVALID 0
#define WGPU_DEVICE_LOST_REASON_DESTROYED 184

typedef int WGPU_ERROR_FILTER;
#define WGPU_ERROR_FILTER_INVALID 0
#define WGPU_ERROR_FILTER_OUT_OF_MEMORY 185
#define WGPU_ERROR_FILTER_VALIDATION 186

